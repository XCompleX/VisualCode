<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="varLinkInput1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAzxJREFUeF7tm6Gy4jAUhuuWuYNAIFYws8wOgplFIJAIHgCB4BGQCAQCh0QgEEgk
        AoHgAfbhcvv3nuy2N2lJm5O0udx/5psybZqcc5KmaRIiH3o8HmK324nFYiHG47Ho9/siPp0B53ANaZAW
        98TnwxWcGAwGiqNlQR7IK/7dfJ1OJzEcDhUnuEDeKCP+3Szt93vR6XQUg12BslBm/LteXS4X0e12FQN9
        gbJhQ/zbv2azmWJQXZAtfnS73bw2d1NgE2yLf7vTZrNRCm4aZCO/lsulUlhTIVv5FJLzEgyo4qO9QnRe
        Yt0SQnjmn1G5T6Ae9UtwvV5xLKcmvuqq0m63cTRXkwY5XEynUxyfi4aWTnj7EYnfP4tBGt29HJzPZxyL
        xT22Tzv951ckxN9ikMZVMMi3fNEXFgvScROn85DB4AxE4VckV8cHg20c/wzy4goC+aiKJhqs4XZewhmE
        w+GAY1YcMzmunJdwBYGm6hQpCcvg2nkJY0v4L5p0rIwv5yUcQcgMkW1nb9FT6wx1CcrU2WIKTc3/k5LA
        FN+1L2F6FD4WLVInSlNH7UtsW8H9fhfWz3/IAUh8p5mTStTV/CW2j0HiO9bjdBdNqLP2JTatIPFdt1Bp
        SugBkG8C5YIpoQeA0J404jsA3wHQG+UT6wC8fCf4yq/B0Wj02gOh+Xwuou12q71oSp2twKb2QeJ78kGg
        uWhKyAEg3xMpF02p6zGwbf7Eh2zeBKCOVmBb+3IYnGi9XisJyuC7FXDUPvmckZKoDL6CwNT0QVa9Xk+X
        qBSug8DlPPmaFS0WWOMqCIw1r18YgV5haazVauGoF+eWGBiMntomELgXeXA5D55umeHeGSIDYRoM6TS3
        4yB3YTSt4/Go3MhFOhh5cDudhnx7rslkotwcOvTVay7qLL4EhR1fnlzuFfJN5S31q9VKySw0yIfqCnmr
        bDLhwSHaYxcUxvsCTUXRDAK2mv+sEPoE62f+mdCjNvEVCZu8/oHKZjqdm9KDHC5haMn97VAGlG08vHUp
        fGH5fCxQVuU/QrgUJho4ZpbyQN65kxlNEyYdbWebAfLQTWAGJSxAYBUG72esx+kCg3O4hjRIm160cKco
        egfAjtHXOK6DHgAAAABJRU5ErkJggg==
</value>
  </data>
</root>